apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"tekton.dev/v1beta1","kind":"Pipeline","metadata":{"annotations":{},"labels":{"argo.cntk/instance":"apps-ace-rest-ci-1"},"name":"ace-config","namespace":"ci"},"spec":{"params":[{"description":"SSH
      url of Configuration repository, ex:
      git@github.com:ace-prod-ref/ace-config.git","name":"is-config-repo-url","type":"string"},{"description":"SSH
      url of Infrastructure repository, ex:
      git@github.com:ace-prod-ref/ace-infra.git","name":"is-infra-repo-url","type":"string"},{"description":"SSH
      url of GitOps repository, ex:
      git@github.com:ace-prod-ref/multi-tenancy-gitops-apps.git","name":"git-ops-repo-url","type":"string"},{"description":"Repo
      name of GitOps repository, in github.com, ex:
      ace-prod-ref/multi-tenancy-gitops-apps","name":"gitops-apps-repo-full-name","type":"string"},{"default":"Changes
      by Pipeline run: $(context.pipelineRun.name)","description":"Title of pull
      request","name":"github-pr-title","type":"string"},{"default":"Changes by
      Pipeline run: $(context.pipelineRun.name)","description":"Body of pull
      request","name":"github-pr-body","type":"string"},{"default":"cicd-acme","description":"Personal
      access token for CICD bot
      user","name":"github-pr-token-secret-name","type":"string"}],"tasks":[{"name":"clone-is-config-repo","params":[{"name":"url","value":"$(params.is-config-repo-url)"},{"name":"subdirectory","value":"is-config"},{"name":"deleteExisting","value":"true"}],"taskRef":{"kind":"ClusterTask","name":"git-clone"},"workspaces":[{"name":"output","workspace":"shared-workspace"},{"name":"ssh-directory","workspace":"ace-config-repo-secret"}]},{"name":"clone-is-infra-repo","params":[{"name":"url","value":"$(params.is-infra-repo-url)"},{"name":"subdirectory","value":"is-infra"},{"name":"deleteExisting","value":"true"}],"taskRef":{"kind":"ClusterTask","name":"git-clone"},"workspaces":[{"name":"output","workspace":"shared-workspace"},{"name":"ssh-directory","workspace":"ace-infra-repo-secret"}]},{"name":"clone-gitops-repo","params":[{"name":"url","value":"$(params.git-ops-repo-url)"},{"name":"subdirectory","value":"gitops-repo"},{"name":"deleteExisting","value":"true"}],"taskRef":{"kind":"ClusterTask","name":"git-clone"},"workspaces":[{"name":"output","workspace":"shared-workspace"},{"name":"ssh-directory","workspace":"gitops-repo-secret"}]},{"name":"resolve-props","params":[{"name":"is-source-directory","value":"is-config"}],"runAfter":["clone-is-config-repo"],"taskRef":{"kind":"Task","name":"resolve-props"},"workspaces":[{"name":"input","workspace":"shared-workspace"}]},{"name":"create-config","params":[{"name":"is-config-directory","value":"is-config"},{"name":"is-infra-directory","value":"is-infra"},{"name":"is-configuration-keystore","value":"$(tasks.resolve-props.results.is-configuration-keystore)"},{"name":"is-configuration-truststore","value":"$(tasks.resolve-props.results.is-configuration-truststore)"},{"name":"is-configuration-setdbparms","value":"$(tasks.resolve-props.results.is-configuration-setdbparms)"},{"name":"is-configuration-serverconf","value":"$(tasks.resolve-props.results.is-configuration-serverconf)"},{"name":"is-configuration-policyproject","value":"$(tasks.resolve-props.results.is-configuration-policyproject)"},{"name":"is-configuration-loopbackdatasource","value":"$(tasks.resolve-props.results.is-configuration-loopbackdatasource)"},{"name":"rendered-config-directory","value":"gitops-repo/ace/environments/base/configurations"},{"name":"repo-directory","value":"gitops-repo"},{"name":"user-name","value":"cicd.acme"},{"name":"user-email","value":"cicd@acme.com"},{"name":"kustomization-path","value":"gitops-repo/ace/environments/base/kustomization.yaml"},{"name":"branch_name","value":"$(context.pipeline.name)-$(context.pipelineRun.name)"}],"runAfter":["resolve-props","clone-is-infra-repo","clone-gitops-repo"],"taskRef":{"kind":"Task","name":"create-config"},"workspaces":[{"name":"workspace","workspace":"shared-workspace"},{"name":"ssh-directory","workspace":"gitops-repo-secret"}]},{"name":"create-pull-request","params":[{"name":"GITHUB_HOST_URL","value":"api.github.com"},{"name":"REPO_FULL_NAME","value":"$(params.gitops-apps-repo-full-name)"},{"name":"HEAD","value":"$(context.pipeline.name)-$(context.pipelineRun.name)"},{"name":"BASE","value":"master"},{"name":"TITLE","value":"$(params.github-pr-title)"},{"name":"BODY","value":"$(params.github-pr-body)"},{"name":"GITHUB_TOKEN_SECRET_NAME","value":"$(params.github-pr-token-secret-name)"}],"runAfter":["create-config"],"taskRef":{"kind":"Task","name":"github-open-pr"}}],"workspaces":[{"name":"shared-workspace"},{"name":"ace-config-repo-secret"},{"name":"ace-infra-repo-secret"},{"name":"gitops-repo-secret"}]}}
  resourceVersion: '6340879'
  name: ace-config
  uid: 8c0ef88d-5801-484e-8150-57ad5994b080
  creationTimestamp: '2022-04-15T15:37:39Z'
  generation: 1
  managedFields:
    - apiVersion: tekton.dev/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
          'f:labels':
            .: {}
            'f:argo.cntk/instance': {}
        'f:spec':
          .: {}
          'f:params': {}
          'f:tasks': {}
          'f:workspaces': {}
      manager: argocd-application-controller
      operation: Update
      time: '2022-04-15T15:37:38Z'
  namespace: ci
  labels:
    argo.cntk/instance: apps-ace-rest-ci-1
spec:
  params:
    - description: >-
        SSH url of Configuration repository, ex:
        git@github.com:ace-prod-ref/ace-config.git
      name: is-config-repo-url
      type: string
    - description: >-
        SSH url of Infrastructure repository, ex:
        git@github.com:ace-prod-ref/ace-infra.git
      name: is-infra-repo-url
      type: string
    - description: >-
        SSH url of GitOps repository, ex:
        git@github.com:ace-prod-ref/multi-tenancy-gitops-apps.git
      name: git-ops-repo-url
      type: string
    - description: >-
        Repo name of GitOps repository, in github.com, ex:
        ace-prod-ref/multi-tenancy-gitops-apps
      name: gitops-apps-repo-full-name
      type: string
    - default: 'Changes by Pipeline run: $(context.pipelineRun.name)'
      description: Title of pull request
      name: github-pr-title
      type: string
    - default: 'Changes by Pipeline run: $(context.pipelineRun.name)'
      description: Body of pull request
      name: github-pr-body
      type: string
    - default: cicd-acme
      description: Personal access token for CICD bot user
      name: github-pr-token-secret-name
      type: string
  tasks:
    - name: clone-is-config-repo
      params:
        - name: url
          value: $(params.is-config-repo-url)
        - name: subdirectory
          value: is-config
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ace-config-repo-secret
    - name: clone-is-infra-repo
      params:
        - name: url
          value: $(params.is-infra-repo-url)
        - name: subdirectory
          value: is-infra
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ace-infra-repo-secret
    - name: clone-gitops-repo
      params:
        - name: url
          value: $(params.git-ops-repo-url)
        - name: subdirectory
          value: gitops-repo
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: ssh-directory
          workspace: gitops-repo-secret
    - name: resolve-props
      params:
        - name: is-source-directory
          value: is-config
      runAfter:
        - clone-is-config-repo
      taskRef:
        kind: Task
        name: resolve-props
      workspaces:
        - name: input
          workspace: shared-workspace
    - name: create-config
      params:
        - name: is-config-directory
          value: is-config
        - name: is-infra-directory
          value: is-infra
        - name: is-configuration-keystore
          value: $(tasks.resolve-props.results.is-configuration-keystore)
        - name: is-configuration-truststore
          value: $(tasks.resolve-props.results.is-configuration-truststore)
        - name: is-configuration-setdbparms
          value: $(tasks.resolve-props.results.is-configuration-setdbparms)
        - name: is-configuration-serverconf
          value: $(tasks.resolve-props.results.is-configuration-serverconf)
        - name: is-configuration-policyproject
          value: $(tasks.resolve-props.results.is-configuration-policyproject)
        - name: is-configuration-loopbackdatasource
          value: $(tasks.resolve-props.results.is-configuration-loopbackdatasource)
        - name: rendered-config-directory
          value: gitops-repo/ace/environments/base/configurations
        - name: repo-directory
          value: gitops-repo
        - name: user-name
          value: mfarhan-tapestry
        - name: user-email
          value: mfarhan@tapestry.com
        - name: kustomization-path
          value: gitops-repo/ace/environments/base/kustomization.yaml
        - name: branch_name
          value: $(context.pipeline.name)-$(context.pipelineRun.name)
      runAfter:
        - resolve-props
        - clone-is-infra-repo
        - clone-gitops-repo
      taskRef:
        kind: Task
        name: create-config
      workspaces:
        - name: workspace
          workspace: shared-workspace
        - name: ssh-directory
          workspace: gitops-repo-secret
    - name: create-pull-request
      params:
        - name: GITHUB_HOST_URL
          value: api.github.com
        - name: REPO_FULL_NAME
          value: $(params.gitops-apps-repo-full-name)
        - name: HEAD
          value: $(context.pipeline.name)-$(context.pipelineRun.name)
        - name: BASE
          value: master
        - name: TITLE
          value: $(params.github-pr-title)
        - name: BODY
          value: $(params.github-pr-body)
        - name: GITHUB_TOKEN_SECRET_NAME
          value: $(params.github-pr-token-secret-name)
      runAfter:
        - create-config
      taskRef:
        kind: Task
        name: github-open-pr
  workspaces:
    - name: shared-workspace
    - name: ace-config-repo-secret
    - name: ace-infra-repo-secret
    - name: gitops-repo-secret
